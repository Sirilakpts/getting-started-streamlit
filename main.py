import streamlit as st
import graphviz

# --- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö ---
st.set_page_config(page_title="‡πÅ‡∏ú‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå", page_icon="üó∫Ô∏è", layout="wide")

st.sidebar.title("‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å")
menu_choice = st.sidebar.selectbox(
    "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:",
    ("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß", "‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏ú‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß")
)

if menu_choice == "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß":
    st.title("üìå ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏ú‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå")
    st.write("‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå‡∏ï‡∏≤‡∏°‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ")

elif menu_choice == "‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏ú‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß":
    st.title("üó∫Ô∏è ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏ú‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå")
    st.write("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°/‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à")

    # --- ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ---
    st.sidebar.header("‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà")
    budget = st.sidebar.radio("1. ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì", ["< 1000 ‡∏ö‡∏≤‡∏ó", "1000 - 3000 ‡∏ö‡∏≤‡∏ó", "> 3000 ‡∏ö‡∏≤‡∏ó"])
    duration = st.sidebar.radio("2. ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß", ["1 ‡∏ß‡∏±‡∏ô", "‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏±‡∏ô"])
    activity = st.sidebar.radio("3. ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à", ["‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥/‡∏ü‡∏£‡∏µ", "‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç", "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏´‡∏£‡∏π/‡∏û‡∏¥‡πÄ‡∏®‡∏©"])

    if st.sidebar.button("‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ú‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß"):

        # --- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ---
        path_nodes = ["Start"]
        path_edges = []
        result = []

        # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà
        if budget == "< 1000 ‡∏ö‡∏≤‡∏ó":
            path_nodes.append("‡∏á‡∏ö <1000")
            path_edges.append(("Start", "‡∏á‡∏ö <1000"))

            if duration == "1 ‡∏ß‡∏±‡∏ô":
                path_nodes.append("1 ‡∏ß‡∏±‡∏ô")
                path_edges.append(("‡∏á‡∏ö <1000", "1 ‡∏ß‡∏±‡∏ô"))

                if activity == "‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥/‡∏ü‡∏£‡∏µ":
                    places = ["‡∏ß‡∏ô‡∏≠‡∏∏‡∏ó‡∏¢‡∏≤‡∏ô‡πÄ‡∏Ç‡∏≤‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏á", "‡∏û‡∏£‡∏∞‡∏ö‡∏£‡∏°‡∏£‡∏≤‡∏ä‡∏≤‡∏ô‡∏∏‡∏™‡∏≤‡∏ß‡∏£‡∏µ‡∏¢‡πå‡∏Ø", "‡∏™‡∏ß‡∏ô‡∏•‡∏°‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå"]
                else:
                    places = ["‡∏ï‡∏•‡∏≤‡∏î‡∏ä‡∏•‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô", "‡∏•‡∏π‡∏Å‡∏ä‡∏¥‡πâ‡∏ô‡∏¢‡∏∑‡∏ô‡∏Å‡∏¥‡∏ô‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå"]

            else:  # ‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
                path_nodes.append("‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏±‡∏ô")
                path_edges.append(("‡∏á‡∏ö <1000", "‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏±‡∏ô"))

                if activity == "‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥/‡∏ü‡∏£‡∏µ":
                    places = ["‡∏û‡∏±‡∏Å‡πÅ‡∏Ñ‡∏°‡∏õ‡πå/‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î", "‡∏ß‡∏ô‡∏≠‡∏∏‡∏ó‡∏¢‡∏≤‡∏ô‡πÄ‡∏Ç‡∏≤‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏á", "‡∏™‡∏ß‡∏ô‡∏•‡∏°‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå"]
                else:
                    places = ["‡∏ï‡∏•‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô", "‡∏•‡∏π‡∏Å‡∏ä‡∏¥‡πâ‡∏ô‡∏¢‡∏∑‡∏ô‡∏Å‡∏¥‡∏ô‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå"]

        elif budget == "1000 - 3000 ‡∏ö‡∏≤‡∏ó":
            path_nodes.append("‡∏á‡∏ö 1000-3000")
            path_edges.append(("Start", "‡∏á‡∏ö 1000-3000"))

            if duration == "1 ‡∏ß‡∏±‡∏ô":
                path_nodes.append("1 ‡∏ß‡∏±‡∏ô")
                path_edges.append(("‡∏á‡∏ö 1000-3000", "1 ‡∏ß‡∏±‡∏ô"))

                if activity == "‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç":
                    places = ["‡∏õ‡∏£‡∏≤‡∏™‡∏≤‡∏ó‡πÄ‡∏Ç‡∏≤‡∏û‡∏ô‡∏°‡∏£‡∏∏‡πâ‡∏á", "‡∏õ‡∏£‡∏≤‡∏™‡∏≤‡∏ó‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏ï‡πà‡∏≥", "‡∏™‡∏ô‡∏≤‡∏°‡∏ä‡πâ‡∏≤‡∏á‡∏≠‡∏≤‡∏£‡∏µ‡∏ô‡πà‡∏≤"]
                else:
                    places = ["‡∏û‡∏¥‡∏û‡∏¥‡∏ò‡∏†‡∏±‡∏ì‡∏ë‡πå", "‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà", "‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á"]

            else:  # ‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
                path_nodes.append("‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏±‡∏ô")
                path_edges.append(("‡∏á‡∏ö 1000-3000", "‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏±‡∏ô"))

                if activity == "‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç":
                    places = ["‡∏õ‡∏£‡∏≤‡∏™‡∏≤‡∏ó‡πÄ‡∏Ç‡∏≤‡∏û‡∏ô‡∏°‡∏£‡∏∏‡πâ‡∏á", "‡∏õ‡∏£‡∏≤‡∏™‡∏≤‡∏ó‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏ï‡πà‡∏≥", "‡∏™‡∏ô‡∏≤‡∏°‡∏ä‡πâ‡∏≤‡∏á‡∏≠‡∏≤‡∏£‡∏µ‡∏ô‡πà‡∏≤", "‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏∏‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏ô‡∏Å‡∏Å‡∏£‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡πÑ‡∏ó‡∏¢"]
                else:
                    places = ["‡∏û‡∏±‡∏Å‡πÄ‡∏Å‡∏™‡∏ï‡πå‡πÄ‡∏Æ‡πâ‡∏≤‡∏™‡πå 2-3 ‡∏î‡∏≤‡∏ß", "‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà", "‡∏ï‡∏•‡∏≤‡∏î"]

        else:  # > 3000 ‡∏ö‡∏≤‡∏ó
            path_nodes.append("‡∏á‡∏ö >3000")
            path_edges.append(("Start", "‡∏á‡∏ö >3000"))

            if duration == "1 ‡∏ß‡∏±‡∏ô":
                path_nodes.append("1 ‡∏ß‡∏±‡∏ô")
                path_edges.append(("‡∏á‡∏ö >3000", "1 ‡∏ß‡∏±‡∏ô"))

                if activity == "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏´‡∏£‡∏π/‡∏û‡∏¥‡πÄ‡∏®‡∏©":
                    places = ["‡∏™‡∏ô‡∏≤‡∏°‡∏ä‡πâ‡∏≤‡∏á‡∏≠‡∏≤‡∏£‡∏µ‡∏ô‡πà‡∏≤ (‡∏ä‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô)", "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° Adventure", "‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏´‡∏£‡∏π"]
                else:
                    places = ["‡∏õ‡∏£‡∏≤‡∏™‡∏≤‡∏ó‡πÄ‡∏Ç‡∏≤‡∏û‡∏ô‡∏°‡∏£‡∏∏‡πâ‡∏á", "‡∏û‡∏¥‡∏û‡∏¥‡∏ò‡∏†‡∏±‡∏ì‡∏ë‡πå", "‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà"]

            else:  # ‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
                path_nodes.append("‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏±‡∏ô")
                path_edges.append(("‡∏á‡∏ö >3000", "‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏±‡∏ô"))

                if activity == "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏´‡∏£‡∏π/‡∏û‡∏¥‡πÄ‡∏®‡∏©":
                    places = ["‡∏û‡∏±‡∏Å‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°‡∏´‡∏£‡∏π/‡∏£‡∏µ‡∏™‡∏≠‡∏£‡πå‡∏ó", "‡∏õ‡∏£‡∏≤‡∏™‡∏≤‡∏ó‡πÄ‡∏Ç‡∏≤‡∏û‡∏ô‡∏°‡∏£‡∏∏‡πâ‡∏á", "‡∏™‡∏ô‡∏≤‡∏°‡∏ä‡πâ‡∏≤‡∏á‡∏≠‡∏≤‡∏£‡∏µ‡∏ô‡πà‡∏≤", "‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏∏‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏ô‡∏Å‡∏Å‡∏£‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡πÑ‡∏ó‡∏¢"]
                else:
                    places = ["‡πÄ‡∏î‡∏¥‡∏ô‡∏ä‡∏°‡πÄ‡∏°‡∏∑‡∏≠‡∏á", "‡∏û‡∏¥‡∏û‡∏¥‡∏ò‡∏†‡∏±‡∏ì‡∏ë‡πå", "‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà", "‡∏ï‡∏•‡∏≤‡∏î‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á"]

        # --- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏ô‡∏î‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà ---
        for place in places:
            path_nodes.append(place)
            path_edges.append((path_nodes[-2], place))  # ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏à‡∏≤‡∏Å‡πÇ‡∏´‡∏ô‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏°‡∏≤‡∏¢‡∏±‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà

        # --- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ---
        dot = graphviz.Digraph(comment='Tourism Decision Tree 4 Layers')
        dot.attr('node', shape='box', style='rounded, filled', fontname='Tahoma', color="#28a745", fillcolor="#d4edda")
        dot.attr('edge', fontname='Tahoma', color="#28a745", penwidth="2.5")

        for node in path_nodes:
            dot.node(node, node)

        for u, v in path_edges:
            dot.edge(u, v)

        # --- ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• ---
        st.header("üå≥ ‡πÅ‡∏ú‡∏ô‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÅ‡∏ú‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß (4 ‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏ï‡πá‡∏°):")
        st.graphviz_chart(dot)
        st.success("üèñÔ∏è ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏õ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß:")
        for place in places:
            st.write(f"- {place}")

    else:
        st.info("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° '‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ú‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô")
